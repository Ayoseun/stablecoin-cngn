{
  "contractName": "IERC1822ProxiableUpgradeable",
  "abi": [
    {
      "inputs": [],
      "name": "proxiableUUID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822ProxiableUpgradeable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n",
  "sourcePath": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
  "ast": {
    "absolutePath": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
    "exportedSymbols": {
      "IERC1822ProxiableUpgradeable": [
        2898
      ]
    },
    "id": 2899,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2890,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "113:23:6"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IERC1822ProxiableUpgradeable",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 2891,
          "nodeType": "StructuredDocumentation",
          "src": "138:203:6",
          "text": " @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
        },
        "fullyImplemented": false,
        "id": 2898,
        "linearizedBaseContracts": [
          2898
        ],
        "name": "IERC1822ProxiableUpgradeable",
        "nameLocation": "352:28:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 2892,
              "nodeType": "StructuredDocumentation",
              "src": "387:438:6",
              "text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
            },
            "functionSelector": "52d1902d",
            "id": 2897,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "proxiableUUID",
            "nameLocation": "839:13:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2893,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "852:2:6"
            },
            "returnParameters": {
              "id": 2896,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2895,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2897,
                  "src": "878:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2894,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "878:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "877:9:6"
            },
            "scope": 2898,
            "src": "830:57:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2899,
        "src": "342:547:6",
        "usedErrors": []
      }
    ],
    "src": "113:777:6"
  },
  "legacyAST": {
    "absolutePath": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
    "exportedSymbols": {
      "IERC1822ProxiableUpgradeable": [
        2898
      ]
    },
    "id": 2899,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2890,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "113:23:6"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IERC1822ProxiableUpgradeable",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 2891,
          "nodeType": "StructuredDocumentation",
          "src": "138:203:6",
          "text": " @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
        },
        "fullyImplemented": false,
        "id": 2898,
        "linearizedBaseContracts": [
          2898
        ],
        "name": "IERC1822ProxiableUpgradeable",
        "nameLocation": "352:28:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 2892,
              "nodeType": "StructuredDocumentation",
              "src": "387:438:6",
              "text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
            },
            "functionSelector": "52d1902d",
            "id": 2897,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "proxiableUUID",
            "nameLocation": "839:13:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2893,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "852:2:6"
            },
            "returnParameters": {
              "id": 2896,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2895,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2897,
                  "src": "878:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2894,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "878:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "877:9:6"
            },
            "scope": 2898,
            "src": "830:57:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2899,
        "src": "342:547:6",
        "usedErrors": []
      }
    ],
    "src": "113:777:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.b01f3284.mod.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2024-12-14T15:38:16.798Z"
}